{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useTokenBalance.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","hooks/useApprove.ts","components/Input/Input.tsx","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","hooks/useAllowance.ts","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","a","cakeContract","getContract","cakeABI","getCakeAddress","methods","call","supply","BigNumber","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","balanceOf","bal","fetchBalance","useTokenBalance","useWallet","account","ethereum","fastRefresh","getTokenBalance","res","Wrapper","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","useApprove","lpContract","dispatch","useDispatch","masterChefContract","useMasterchef","onApprove","useCallback","approve","tx","fetchFarmUserDataAsync","useLotteryApprove","useCake","lotteryContract","useLottery","StyledInputWrapper","input","radii","default","StyledInput","Input","endAdornment","onChange","placeholder","startAdornment","value","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","pow","toString","send","from","on","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","TranslateString","useI18n","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","fullWidth","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onSelectMax","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","random","handleSelectMax","Number","e","currentTarget","Tips","Announce","Final","WarningModal","CardActions","TicketCard","requestedApproval","setRequestedApproval","allowance","setAllowance","fetchAllowance","getAllowance","refreshInterval","useLotteryAllowance","cakeBalance","ticketsLength","PurchaseWarningModal","onPresentApprove","tokenName","onPresentBuy","handleApprove","toNumber","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","Row","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","secondary","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","LayoutWrapper","StyledImage","HowItWorks","Link","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","href","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Provider"],"mappings":"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","file":"static/js/11.b06021f3.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (ticketIssue.toString() === issueIdex) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finanltokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finanltokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finanltokenIds.length > 200) {\n    finanltokenIds = finanltokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finanltokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenids = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIdex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenids.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIdex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\n    return amount / 1e18 / 10\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (account && lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [account, lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: #ffffff;\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #ffb526 0%, #fcbe39 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(999, 'The FISHZ Lottery')}</Title>\n          <Blurb>{TranslateString(999, 'Buy tickets with FISHZ')}</Blurb>\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winngNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(999, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              FISHZ\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(999, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  onSelectMax?: () => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy('10', numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > 50) {\n      setVal('50')\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * 10\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"FISHZ\"\n      />\n      <div>\n        <Tips>{TranslateString(999, 'Your amount must be a multiple of 10 FISHZ')}</Tips>\n        <Tips>{TranslateString(999, '1 Ticket = 10 FISHZ')}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            999,\n            'Ticket purchases are final. Your FISHZ cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} FISHZ`)}</Final>\n      </div>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          fullWidth\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your FISHZ will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button fullWidth onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useLotteryApprove } from 'hooks/useApprove'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const { onApprove } = useLotteryApprove()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"FISHZ\" />)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button fullWidth disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(999, 'Approve FISHZ')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          fullWidth\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 45).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 25).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 15).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 15).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(999, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem marginBottom=\"20px\">\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem marginBottom=\"20px\">\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem marginBottom=\"20px\">\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport PrizeGrid from '../PrizeGrid'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} FISHZ</Heading>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWallet()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title>\n                {account && lotteryHasDrawn\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                  : TranslateString(572, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>\n            {/* <RabbitRow>\n              <RabbitBox>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n            </RabbitRow> */}\n            <RabbitRowSmall>\n              <RabbitBoxSmall>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n            </RabbitRowSmall>\n            <Column>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n            {/* <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link> */}\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #fef2da 0%, #fdb525 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(999, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          999,\n          'Spend FISHZ to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      {/* <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">Read more</StyledLink> */}\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWallet()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <Input\n            value={lotteryNumber}\n            type=\"number\"\n            isWarning={isError}\n            max={initialLotteryNumber}\n            onChange={handleChange}\n          />\n          <ButtonWrapper>\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\n              {TranslateString(999, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\n          {TranslateString(999, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} FISHZ`)}\n              Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pancakeswap-libs/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#1FC7D4' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(999, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(999, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [account, lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        {/* <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper> */}\n        {/* <Divider /> */}\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}